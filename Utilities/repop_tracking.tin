#CLASS {repop} {OPEN};
#VARIABLE {repop_data} {{Area}{{number}{}{mean}{}{min}{}{max}{}{last_repop}{}}};
#CLASS {repop} {CLOSE};
#ALIAS {repop} {
    #SHOWME {Area: %1};
    #CLASS {repop} {READ} {$script_dir/Utilities/repop.dat};
    #FORMAT {repop_time} {%T};
    #VARIABLE {repop_duration} {@get_tdiff{$repop_data[%1][last_repop]}};
    #IF {! &repop_data[%1]} {
        #NOP {An areas first entry, but not a full repop};
        #VARIABLE {repop_data[%1][last_repop]} {$repop_time};
    };
    #ELSEIF {! &repop_data[%1][number]} {
        #NOP {An area's first logged repop};
        #MATH {repop_data[%1][mean]} {@get_tdiff{$repop_data[%1][last_repop]}};
        #VARIABLE {repop_data[%1][min]} {$repop_data[%1][mean]};
        #VARIABLE {repop_data[%1][max]} {$repop_data[%1][mean]};
        #VARIABLE {repop_data[%1][number]} {1};
        #VARIABLE {repop_data[%1][last_repop]} {$repop_time};
    };
    #ELSEIF {$repop_duration < 2*$repop_data[%1][mean] && $repop_duration > 120} {
        #NOP {The general case};
        #NOP #MATH {repop_duration} {$repop_time - $repop_data[%1][last_repop]};
        #MATH {repop_data[%1][mean]} {$repop_data[%1][mean] + (($repop_duration - $repop_data[%1][mean])/($repop_data[%1][number] + 1.000))};
        #IF {$repop_duration > $repop_data[%1][max]} {#VARIABLE {repop_data[%1][max]} {$repop_duration};};
        #ELSEIF {$repop_duration < $repop_data[%1][min]} {#VARIABLE {repop_data[%1][min]} {$repop_duration};};
        #MATH {repop_data[%1][number]} {$repop_data[%1][number] + 1};
        #VARIABLE {repop_data[%1][last_repop]} {$repop_time};
    };
    #CLASS {repop} {WRITE} {$script_dir/Utilities/repop.dat};
}

#NOP {
#ALIAS {sincerepop} {
    #IF {"%0" == "" && $MSDP} {
        #NOP {Assume current area};
        
    };
    #ELSEIF {"%0" == ""} {
        #NOP {Assume the last repop seen};
    }
    #ELSE {
        #NOP {Try to find area};
        
    };
    #SHOWME The last repop for $repop_report_area happened @parse_tdiff{@get_tdiff{$repop[$repop_report_area][last_repop]}};
}
nop};
